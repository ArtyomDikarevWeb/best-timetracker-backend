version: "3.8"

services:
  nginx:
    image: "nginx:stable-alpine"
    restart: always
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app:/var/www/timetracker
    container_name: timetracker_nginx

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    restart: always
    environment:
      PHP_IDE_CONFIG: "serverName=${XDEBUG_SERVER_NAME}"
    volumes:
      - ./app:/var/www/timetracker
    container_name: timetracker_php

  postgres:
    image: postgres:alpine
    restart: always
    ports:
      - ${POSTGRES_HOST_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - timetracker_db:/var/lib/postgresql/data:rw
    container_name: timetracker_postgres

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - ${ADMINER_HOST_PORT}:8080
    container_name: timetracker_adminer

  composer:
    build:
      context: .
      dockerfile: php/composer.Dockerfile
    volumes:
      - ./app:/var/www/timetracker
    user: "${PUID}:${PGID}"

  artisan:
    build:
      context: .
      dockerfile: php/Dockerfile
    volumes:
      - ./app:/var/www/timetracker
    entrypoint: [ "php", "/var/www/timetracker/artisan" ]
    user: "${PUID}:${PGID}"

volumes:
  timetracker_db: